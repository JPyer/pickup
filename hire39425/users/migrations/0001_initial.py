# Generated by Django 3.0.1 on 2020-10-06 07:09

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CloudMsg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=1000)),
                ('msg_type', models.IntegerField(choices=[(0, 'notice'), (1, 'upgrade'), (3, 'other')], default=1, verbose_name='消息类型')),
                ('gmt_create', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
            ],
        ),
        migrations.CreateModel(
            name='CloudSysInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=1000)),
                ('fw_ver', models.CharField(max_length=64, verbose_name='固件版本')),
                ('sw_ver', models.CharField(max_length=64, verbose_name='软件版本')),
                ('gmt_create', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('publish_time', models.DateTimeField(verbose_name='发布时间')),
            ],
        ),
        migrations.CreateModel(
            name='PermissionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('uid', models.CharField(max_length=32, null=True, unique=True)),
                ('status', models.IntegerField(default=1)),
                ('deleted', models.IntegerField(default=0)),
                ('gmt_create', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('gmt_modify', models.DateTimeField(default=datetime.datetime.now, verbose_name='更新时间')),
            ],
        ),
        migrations.CreateModel(
            name='Permissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('status', models.IntegerField(default=1)),
                ('deleted', models.IntegerField(default=0)),
                ('view_name', models.CharField(max_length=64, null=True, verbose_name='视图名')),
                ('gmt_create', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('gmt_modify', models.DateTimeField(default=datetime.datetime.now, verbose_name='更新时间')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.PermissionGroup')),
            ],
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.CharField(max_length=32, unique=True)),
                ('name', models.CharField(max_length=32)),
                ('status', models.IntegerField(default=1)),
                ('deleted', models.IntegerField(default=0)),
                ('describe', models.TextField(null=True, verbose_name='描述')),
                ('gmt_create', models.DateTimeField(default=datetime.datetime.now, verbose_name='创建时间')),
                ('gmt_modify', models.DateTimeField(default=datetime.datetime.now, verbose_name='更新时间')),
            ],
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('permission', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.Permissions')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='users.UserRole')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_role', models.PositiveIntegerField(blank=True, choices=[(0, 'superuser'), (1, 'customer'), (2, 'org'), (3, 'org_user')], null=True, verbose_name='用户角色')),
                ('realname', models.CharField(blank=True, max_length=50, null=True, verbose_name='用户名')),
                ('last_login_ip', models.CharField(blank=True, max_length=16, null=True, verbose_name='上次登录ip')),
                ('telephone', models.CharField(blank=True, max_length=12, null=True, verbose_name='手机号')),
                ('is_active', models.BooleanField(default=True, verbose_name='启用')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('permissions', models.ManyToManyField(related_name='user_permission_list', to='users.Permissions')),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='users.UserRole')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
